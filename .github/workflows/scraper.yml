name: NowGoal Scraper

on:
  # Ejecutar cada 15 minutos entre las 8:00 y 23:00 UTC
  schedule:
    - cron: '*/15 8-23 * * *'
  
  # Permitir ejecuci√≥n manual
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Activar modo debug'
        required: false
        default: 'false'
        type: boolean

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Verificar estructura del proyecto
      run: |
        echo "üìÅ Estructura del proyecto:"
        ls -la
        echo "üìÅ Contenido del directorio ra√≠z:"
        find . -maxdepth 1 -type f
        echo "üìÅ Contenido de .github/workflows:"
        ls -la .github/workflows/
        
    - name: Crear archivo de estado inicial
      run: |
        echo "{}" > sent_matches.json
        echo "üìÅ Archivo de estado creado:"
        ls -la sent_matches.json
        
    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Instalar dependencias del sistema
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg unzip xvfb
        
    - name: Instalar Chrome
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
    - name: Instalar ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | cut -d ' ' -f3 | cut -d '.' -f1-3)
        LATEST_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}")
        wget -O /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/${LATEST_VERSION}/chromedriver_linux64.zip"
        sudo unzip /tmp/chromedriver.zip -d /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        echo "Chrome version: $(google-chrome --version)"
        echo "ChromeDriver version: $(chromedriver --version)"
        
    - name: Preparar requirements.txt
      run: |
        if [ -f requirements.txt ]; then
          echo "üì¶ Usando requirements.txt existente"
          cat requirements.txt
        else
          echo "üì¶ Creando requirements.txt con dependencias b√°sicas"
          echo "selenium==4.15.2" > requirements.txt
          echo "pandas==2.1.4" >> requirements.txt
          echo "webdriver-manager==4.0.1" >> requirements.txt
          echo "lxml==4.9.3" >> requirements.txt
          echo "openpyxl==3.1.2" >> requirements.txt
          echo "requests==2.31.0" >> requirements.txt
          echo "beautifulsoup4==4.12.2" >> requirements.txt
          echo "python-dotenv==1.0.0" >> requirements.txt
          echo "pytest==7.4.3" >> requirements.txt
          echo "pytest-selenium==4.0.2" >> requirements.txt
          echo "pytest-timeout==2.2.0" >> requirements.txt
          echo "urllib3==2.0.7" >> requirements.txt
        fi
        
    - name: Instalar dependencias de Python
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Ejecutar scraper
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        GITHUB_ACTIONS: true
        DISPLAY: :99
      run: |
        Xvfb :99 -screen 0 1024x768x16 &
        sleep 3
        python telegram.py || {
          echo "‚ùå Error al ejecutar el scraper"
          exit 1
        }
        
    - name: Verificar resultados
      run: |
        echo "üìä Archivos generados:"
        ls -la *.json || echo "No se generaron archivos JSON"
        
    - name: Subir archivo de estado actualizado
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: scraper-state
        path: sent_matches.json
        retention-days: 7
        if-no-files-found: error
      
    - name: Notificar error
      if: failure()
      run: |
        echo "‚ùå El workflow ha fallado. Por favor, revisa los logs para m√°s detalles."
